opcode

assembly {
    addr := create(0 , add(.,.) , mload(..))
}


check if they are compatible with the evm/ zksync and so on

-------------------------------------------------------------

check functions if they returned 0 address and check then if there is a require(var != 0x0) //or however is address(0)

-------------------------------------------------------------

check if one user can steal money from another user
check if one user can steal money from the contract

-------------------------------------------------------------

when signing with v,r,s or other important password or param they can be seen in the blochckain
make sure there is another param like nonce or deadline in the deposit/withdraw func or similar to it to not have MEV attack

check sandwich mev attack


"if someone saw the tx in the mempool can somehow benefit from it/not loose money/gain money"


check what ecrecover returns

MEV example:

we have
1. refund - get my money back
2. selectWinner - selects winner

if we select winner someone can frontrow see who the winner will be in the mempool before the tx is added to the blockchain
then he will refund if he is not the winner

how to fix this:
add endGame func and execute it before selecting winner and in refund func add if game ended revert at top of the function

add minimum output amount, deadline and nonce

use private pool like flashbots and so on

----------------------------------------------------------------

slippage

----------------------------------------------------------------

oracle manipulations












